<!--
==============================================================================
 This software is part of the Open Standard for Unattended Sensors (OSUS)
 reference implementation (OSUS-R).

 To the extent possible under law, the author(s) have dedicated all copyright
 and related and neighboring rights to this software to the public domain
 worldwide. This software is distributed without any warranty.

 You should have received a copy of the CC0 Public Domain Dedication along
 with this software. If not, see
 <http://creativecommons.org/publicdomain/zero/1.0/>.
==============================================================================
 
 The second dialog in the the add channels process. Based on the chosen type from
 the channels_new_channel_dialog dialog, this page will render inputs specific to 
 the type of channel chosen. Creation of new channel will happen if create button 
 is selected.
 
==============================================================================
 -->
<ui:composition
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:fn="http://java.sun.com/jsp/jstl/functions"
    xmlns:c="http://java.sun.com/jsp/jstl/core"
    xmlns:p="http://primefaces.org/ui">
        <p:dialog widgetVar="newChannelPropsDlg" id="propsDlg" header="Set Channel Properties" width="300" resizable="false">
            <p:outputPanel id="newChannelProps" style="width:100%">
                
                <h:form>
                    <p:column>
                        <p:commandButton id="changeChannelType" 
                            value="Change Channel Type" 
                            oncomplete="newChannelPropsDlg.hide();setChannelType.show();" 
                            update='@([id$="newChannelProps"])' />
                    </p:column>
                </h:form>
                <p:outputPanel style="margin:0 auto" rendered="#{channelGuiDialogHelper.selectedNewChannelType eq 'SOCKET'}">
                    <h:form>
                        <table style="width:100%">
                            <tr>
                                <td style="padding-top:10px">
                                    <h:outputLabel styleClass="textHeader" for="hostName" value="Host Name"/>
                                    <br/>
                                    <p:inputText required="true" requiredMessage="Please enter a host name." style="margin-left:10px; width:90%" id="hostName" value="#{channelGuiDialogHelper.newSocketHost}">
                                        <f:validateLength minimum="1"/>
                                    </p:inputText>
                                    <p:message for="hostName"/>
                                </td>
                            </tr>
                            <tr>
                                <td style="padding-top:10px">
                                    <h:outputLabel styleClass="textHeader" for="hostPort" value="Host Port"/>
                                    <br/>
                                    <h:outputLabel value="(controller defaults to 4000)"/>
                                    <br/>
                                    <p:inputText style="margin-left:10px;width:90%" id="hostPort" value="#{channelGuiDialogHelper.newSocketPort}">
                                        <f:validateLength minimum="1"/>
                                    </p:inputText>
                                    <p:message for="hostPort"/>
                                </td>
                            </tr>
                            <tr>
                                <td style="padding-top:10px">
                                    <h:outputLabel styleClass="textHeader" for="enableSsl" value="Enable SSL"/>
                                    <br/>
                                    <p:selectBooleanButton style="margin-left:10px" value="#{channelGuiDialogHelper.newSocketSsl}" id="enableSsl" onLabel="Yes" offLabel="No" />
                                    <p:message for="enableSsl"/>
                                </td>
                            </tr>
                            <tr>
                                <td style="text-align:center;padding-top:10px">
                                    <p:commandButton value="Create Channel" id="createChanButton" actionListener="#{channelManager.createSocketChannel(controllerManager.getMaxId(), channelGuiDialogHelper.newSocketHost, channelGuiDialogHelper.newSocketPort, channelGuiDialogHelper.newSocketSsl)}" 
                                        update='@([id$="newChannelProps"])' oncomplete="if (!args.validationFailed) newChannelPropsDlg.hide();">
                                        
                                    </p:commandButton>
                                </td>
                            </tr>
                        </table>
                        
                        <f:event listener="#{channelGuiDialogHelper.validateSocketDoesNotExist}" type="postValidate"/>
                        
                    </h:form>
                </p:outputPanel>
               <p:outputPanel rendered="#{channelGuiDialogHelper.selectedNewChannelType eq 'TRANSPORT'}">
                    <h:form>
                     <ui:param name="transports" value="#{channelMgr.getAllTransportLayerChannels()}"/>
                     <table style="width:100%">
                        <tr>
                            <td>
                                <h:outputLabel styleClass="textHeader" for="cIds" value="Controller"/>
                                <br/>
                                <p:selectOneMenu required="true" converter="hexConverter" requiredMessage="Please select a controller id." id="cIds" style="margin-left:10px;width:90%" value="#{channelGuiDialogHelper.newChannelControllerId}" editable="true">
                                   <f:selectItems value="#{controllerMgr.getAllControllers()}" var="controller" itemLabel="#{controller.id}" itemValue="#{controller.id}"/>
                                </p:selectOneMenu>
                                <p:message for="cIds"/>
                           </td>
                        </tr>
                        <tr>
                            <td style="padding-top:10px">
                                <h:outputLabel styleClass="textHeader" for="transportLayers" value="Selected Transport Layer"/>
                                <br/>
                                <h:outputText style="margin-left:10px" value="#{channelGuiDialogHelper.newTransportName}"/>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <h:outputLabel styleClass="textHeader" for="localAddress" value="Select or Enter A Local Address"/>
                                <br/>
                                <p:selectOneMenu required="true" requiredMessage="Please select an address." id="localAddress" style="margin-left:10px;width:90%" value="#{channelGuiDialogHelper.newTransportLocalAddress}" editable="true">
                                    <f:selectItems value="#{channelGuiDialogHelper.getAllKnownAddresses()}" var="address" itemLabel="#{address}" itemValue="#{address}"/>
                                    <f:validateLength minimum="1"/>
                                </p:selectOneMenu>
                                <p:message for="localAddress"/>
                            </td>
                        </tr>
                        <tr>
                            <td style="padding-top:10px">
                                <h:outputLabel styleClass="textHeader" for="remoteAddress" value="Select or Enter An Remote Address"/>
                                <br/>
                                <p:selectOneMenu required="true" requiredMessage="Please select an address." id="remoteAddress" style="margin-left:10px;width:90%" value="#{channelGuiDialogHelper.newTransportRemoteAddress}" editable="true">
                                    <f:selectItems value="#{channelGuiDialogHelper.getAllKnownAddresses()}" var="address" itemLabel="#{address}" itemValue="#{address}"/>
                                    <f:validateLength minimum="1"/>
                                </p:selectOneMenu>
                                <p:message for="remoteAddress"/>
                            </td>
                        </tr>
                        <tr>
                            <td style="text-align:center;padding-top:10px">
                                <p:commandButton value="Create Channel" id="createChanButton" actionListener="#{channelManager.createTransportChannel(channelGuiDialogHelper.newChannelControllerId, channelGuiDialogHelper.newTransportName, channelGuiDialogHelper.newTransportLocalAddress , channelGuiDialogHelper.newTransportRemoteAddress)}" 
                                    update='@([id$="newChannelProps"])' oncomplete="if(!args.validationFailed) newChannelPropsDlg.hide();"/>
                            </td>
                        </tr>
                     </table>
                     
                     <f:event listener="#{channelGuiDialogHelper.validateTransportDoesNotExist}" type="postValidate"/>
                     
                    </h:form>
               </p:outputPanel>
            </p:outputPanel>
        </p:dialog>
    
</ui:composition>